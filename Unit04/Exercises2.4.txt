Exercise 2.4.1.

// Create a sequence for the department number column in the department table, 
// which increments in 10s.

	CREATE SEQUENCE departmentNum
	INCREMENT 10
	START 10;

	ALTER TABLE dept 
	ALTER COLUMN deptno SET DEFAULT nextval('departmentNum');


// Create an enum type for the job column in the employee table.

	CREATE TYPE job AS ENUM ('CLERK', 'SALESMAN', 'MANAGER', 'ANALYST', 'PRESIDENT');

	ALTER TABLE employee
	ALTER COLUMN job TYPE job
	USING job::job;

Exercise 2.4.2.

// Add a constraint that checks that the score is between 0 and 10.

	ALTER TABLE scores 
	ADD CONSTRAINT check_score CHECK (score >= 0 AND score <= 10);

// Create a domain which checks that the id card has the format 'c000' (c followed by 3 digits).

	CREATE DOMAIN idcard_format AS TEXT
	CHECK (VALUE ~'^c(\d{3})$');

	ALTER TABLE student
	ALTER COLUMN idcard TYPE idcard_format;

// Create a domain which checks the email format (charactersORdigits@charactersORdigits.domain).

	CREATE DOMAIN email_format AS TEXT
	CHECK (VALUE ~'^([a-z]||\d){1,}@([a-z]||\d){1,}.([a-z]){1,4}$');

	ALTER TABLE student
	ALTER COLUMN email TYPE email_format;

// Create a domain that checks that the phone format is correct (9 digits).

	CREATE DOMAIN phone_format AS TEXT
	CHECK (VALUE ~'^\d{9}$');

	ALTER TABLE student
	ALTER COLUMN phone TYPE phone_format;

Exercise 2.4.3.

// Create a domain that checks that the author code is 1-4 characters (author's initials)
// followed by 4 digits (birth year).

	DOMAIN author_code AS TEXT
	CHECK (VALUE ~('^([A-Z]{1,4})(\d{4})$'));

// Create a domain that checks whether the entered double is greater than 0.

	CREATE DOMAIN check_positive_num AS DOUBLE PRECISION
	CHECK (VALUE > 0);

// Create three enums that contain the values for styles, painting types and material types.

	CREATE TYPE styles AS ENUM ('grecoRoman','neoClassic','cubism');
	CREATE TYPE paintingTypes AS ENUM ('oilPainting','watercolour','pastel');
	CREATE TYPE materialTypes AS ENUM ('iron','bronze','marble');

// Create a composite type dimensionsType whose values are of type check_positive_num 
// (meaning that they are double precision greater than 0).

	CREATE TYPE dimensionsType AS (
		width check_positive_num,
		height check_positive_num
	);

// Create table author with code column being of type domain author_code.

	CREATE TABLE author (
		code author_code PRIMARY KEY,
		name VARCHAR(100),
		nationality VARCHAR(100)	
	);

// Create table artwork with style column being of type styles enum.

	CREATE TABLE artwork (
		code SERIAL,
		title VARCHAR(100),
		dated DATE, 
		style styles
	);

// Create table painting with column type being of type paintingTypes enum
// and column dimensions being dimensionsType composite type. It inherits from artwork.

	CREATE TABLE painting (
		type paintingTypes,
		dimensions dimensionsType
	) INHERITS (artwork);

// Table sculpture inherits from painting table. Weight is of type check_poisitve_num.

	CREATE TABLE sculpture (
		material materialTypes,
		weight check_positive_num
	) INHERITS (artwork);

